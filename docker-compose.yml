version: '3'
networks:
  gin_template_network:

services:
  gin_template_zookeeper:
    image: wurstmeister/zookeeper
    container_name: gin_template_zookeeper
    ports:
      - 2181:2181
    networks:
      - gin_template_network
  gin_template_kafka:
    image: wurstmeister/kafka
    container_name: gin_template_kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.34 # 这里写 自己本机的内网IP 或在 服务器公网IP
      KAFKA_ZOOKEEPER_CONNECT: gin_template_zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "stream-in:1:1,stream-out:1:1"
    networks:
      - gin_template_network
    volumes:
      - ${PWD}/volumes/kafka/docker.sock:/var/run/docker.sock
  gin_template_elasticsearch:
    image: elasticsearch:7.11.2
    container_name: gin_template_elasticsearch
    environment:
      - node.name=gin_template_elasticsearch
      - cluster.name=es-cluster
      - discovery.seed_hosts=gin_template_elasticsearch,gin_template_elasticsearch2,gin_template_elasticsearch3
      - cluster.initial_master_nodes=gin_template_elasticsearch,gin_template_elasticsearch2,gin_template_elasticsearch3
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms150m -Xmx150m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ${PWD}/volumes/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - gin_template_network
  gin_template_elasticsearch2:
    image: elasticsearch:7.11.2
    container_name: gin_template_elasticsearch2
    environment:
      - node.name=gin_template_elasticsearch2
      - cluster.name=es-cluster
      - discovery.seed_hosts=gin_template_elasticsearch,gin_template_elasticsearch2,gin_template_elasticsearch3
      - cluster.initial_master_nodes=gin_template_elasticsearch,gin_template_elasticsearch2,gin_template_elasticsearch3
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms150m -Xmx150m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200
      - 9300
    volumes:
      - ${PWD}/volumes/elasticsearch2:/usr/share/elasticsearch/data # es集群每个节点的volume 映射位置不能相同
    networks:
      - gin_template_network
  gin_template_elasticsearch3:
    image: elasticsearch:7.11.2
    container_name: gin_template_elasticsearch3
    environment:
      - node.name=gin_template_elasticsearch3
      - cluster.name=es-cluster
      - discovery.seed_hosts=gin_template_elasticsearch,gin_template_elasticsearch2,gin_template_elasticsearch3
      - cluster.initial_master_nodes=gin_template_elasticsearch,gin_template_elasticsearch2,gin_template_elasticsearch3
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms150m -Xmx150m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200
      - 9300
    volumes:
      - ${PWD}/volumes/elasticsearch3:/usr/share/elasticsearch/data # es集群每个节点的volume 映射位置不能相同
    networks:
      - gin_template_network
  gin_template_kibana:
    container_name: gin_template_kibana
    image: kibana:7.11.2
    ports:
      - 5601:5601
    depends_on:
      - gin_template_elasticsearch
      - gin_template_elasticsearch2
      - gin_template_elasticsearch3
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - gin_template_network
#  rabbitmq:
#    hostname: rabbitmq_1
#    container_name: rabbitmq_1
#    environment:
#      RABBITMQ_DEFAULT_VHOST: "/"
#      RABBITMQ_DEFAULT_USER: "guest"
#      RABBITMQ_DEFAULT_PASS: "guest"
#    image: "rabbitmq:3.7.16-management"
#    restart: always
#    ports:
#      - 15672:15672
#      - 4369:4369
#      - 5672:5672
#      - 25672:25672
#    volumes:
#      - ${PWD}/volumes/rabbitmq:/var/lib/rabbitmq
#    networks:
#      - gin_template_network
